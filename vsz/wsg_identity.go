package vsz

// API Version: v9_0

type WSGIdentityAaaServer struct {
	// Id
	// the identifier of the AAA server
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// Name
	// the identifier of the AAA server
	// Constraints:
	//    - nullable
	Name *string `json:"name,omitempty"`
}

func NewWSGIdentityAaaServer() *WSGIdentityAaaServer {
	m := new(WSGIdentityAaaServer)
	return m
}

type WSGIdentityAaaServerList struct {
	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityAaaServer `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityAaaServerList() *WSGIdentityAaaServerList {
	m := new(WSGIdentityAaaServerList)
	return m
}

type WSGIdentityAuthenticationServerConfig struct {
	// AuthenticationServerID
	// Authentication server id
	// Constraints:
	//    - nullable
	AuthenticationServerID *string `json:"AUTHENTICATION_SERVER_ID,omitempty"`

	// AuthenticationServerName
	// Authentication server name
	// Constraints:
	//    - nullable
	AuthenticationServerName *string `json:"AUTHENTICATION_SERVER_NAME,omitempty"`

	// AuthenticationServerType
	// Authentication server type
	// Constraints:
	//    - nullable
	AuthenticationServerType *string `json:"AUTHENTICATION_SERVER_TYPE,omitempty"`

	// Id
	// server id
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// Local
	// Is local server
	// Constraints:
	//    - nullable
	Local *bool `json:"local,omitempty"`

	// Name
	// server name
	// Constraints:
	//    - nullable
	Name *string `json:"name,omitempty"`

	// Type
	// server type
	// Constraints:
	//    - nullable
	Type *string `json:"type,omitempty"`
}

func NewWSGIdentityAuthenticationServerConfig() *WSGIdentityAuthenticationServerConfig {
	m := new(WSGIdentityAuthenticationServerConfig)
	return m
}

type WSGIdentityCountryList struct {
	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityCountrySummary `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityCountryList() *WSGIdentityCountryList {
	m := new(WSGIdentityCountryList)
	return m
}

type WSGIdentityCountrySummary struct {
	// CountryName
	// Full name of country
	// Constraints:
	//    - nullable
	CountryName *string `json:"countryName,omitempty"`

	// CountryShortName
	// Short name of country
	// Constraints:
	//    - nullable
	CountryShortName *string `json:"countryShortName,omitempty"`
}

func NewWSGIdentityCountrySummary() *WSGIdentityCountrySummary {
	m := new(WSGIdentityCountrySummary)
	return m
}

type WSGIdentityCreateIdentityGuestPass struct {
	// AutoGeneratedPassword
	// Pass generation
	// Constraints:
	//    - nullable
	AutoGeneratedPassword *bool `json:"autoGeneratedPassword,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// GuestName
	// Constraints:
	//    - required
	GuestName *WSGCommonNormalName `json:"guestName" validate:"required"`

	// MaxDevices
	// Constraints:
	//    - required
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices" validate:"required"`

	// NumberOfPasses
	// Number of passes
	// Constraints:
	//    - required
	NumberOfPasses *int `json:"numberOfPasses" validate:"required"`

	// PassEffectSince
	// Pass effective since
	// Constraints:
	//    - required
	//    - oneof:[CREATION_TIME,FIRST_USE]
	PassEffectSince *string `json:"passEffectSince" validate:"required,oneof=CREATION_TIME FIRST_USE"`

	// PassUseDays
	// Expire new guest pass if not used within
	// Constraints:
	//    - nullable
	PassUseDays *int `json:"passUseDays,omitempty"`

	// PassValidFor
	// Constraints:
	//    - required
	PassValidFor *WSGIdentityPassValidFor `json:"passValidFor" validate:"required"`

	// PassValue
	// Pass value
	// Constraints:
	//    - nullable
	PassValue *string `json:"passValue,omitempty"`

	// Remarks
	// Remarks
	// Constraints:
	//    - nullable
	Remarks *string `json:"remarks,omitempty"`

	// SessionDuration
	// Constraints:
	//    - nullable
	SessionDuration *WSGIdentitySessionDuration `json:"sessionDuration,omitempty"`

	// Wlan
	// Constraints:
	//    - required
	Wlan *WSGCommonGenericRef `json:"wlan" validate:"required"`

	// Zone
	// Constraints:
	//    - required
	Zone *WSGCommonGenericRef `json:"zone" validate:"required"`
}

func NewWSGIdentityCreateIdentityGuestPass() *WSGIdentityCreateIdentityGuestPass {
	m := new(WSGIdentityCreateIdentityGuestPass)
	return m
}

type WSGIdentityCreateIdentityUserRole struct {
	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// FirewallProfileId
	// Constraints:
	//    - required
	FirewallProfileId *string `json:"firewallProfileId" validate:"required"`

	// MaxDevices
	// Constraints:
	//    - required
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices" validate:"required"`

	// Name
	// Constraints:
	//    - required
	Name *WSGCommonNormalName2to64 `json:"name" validate:"required"`

	// UserTrafficProfile
	// Constraints:
	//    - required
	UserTrafficProfile *WSGCommonGenericRef `json:"userTrafficProfile" validate:"required"`

	// VlanId
	// vlan id
	// Constraints:
	//    - nullable
	//    - min:1
	//    - max:4096
	VlanId *int `json:"vlanId,omitempty" validate:"omitempty,gte=1,lte=4096"`

	// VlanPooling
	// Constraints:
	//    - nullable
	VlanPooling *WSGCommonGenericRef `json:"vlanPooling,omitempty"`
}

func NewWSGIdentityCreateIdentityUserRole() *WSGIdentityCreateIdentityUserRole {
	m := new(WSGIdentityCreateIdentityUserRole)
	return m
}

type WSGIdentityCreateSubscriptionPackage struct {
	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationInterval
	// Expiration interval
	// Constraints:
	//    - required
	//    - oneof:[HOUR,DAY,WEEK,MONTH,YEAR,NEVER]
	ExpirationInterval *string `json:"expirationInterval" validate:"required,oneof=HOUR DAY WEEK MONTH YEAR NEVER"`

	// ExpirationValue
	// Expiration value
	// Constraints:
	//    - required
	ExpirationValue *int `json:"expirationValue" validate:"required"`

	// Name
	// Constraints:
	//    - required
	Name *WSGCommonNormalName `json:"name" validate:"required"`
}

func NewWSGIdentityCreateSubscriptionPackage() *WSGIdentityCreateSubscriptionPackage {
	m := new(WSGIdentityCreateSubscriptionPackage)
	return m
}

type WSGIdentityCreateUser struct {
	// Address
	// Address
	// Constraints:
	//    - nullable
	Address *string `json:"address,omitempty"`

	// City
	// City
	// Constraints:
	//    - nullable
	City *string `json:"city,omitempty"`

	// CountryName
	// Country
	// Constraints:
	//    - nullable
	CountryName *string `json:"countryName,omitempty"`

	// CountryShortName
	// Country
	// Constraints:
	//    - nullable
	CountryShortName *string `json:"countryShortName,omitempty"`

	// DomainId
	// Domain ID
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// Email
	// Email
	// Constraints:
	//    - nullable
	Email *string `json:"email,omitempty"`

	// FirstName
	// First name
	// Constraints:
	//    - required
	FirstName *string `json:"firstName" validate:"required"`

	// IsDisabled
	// Is Disabled
	// Constraints:
	//    - required
	//    - oneof:[NO,YES]
	IsDisabled *string `json:"isDisabled" validate:"required,oneof=NO YES"`

	// LastName
	// Last Name
	// Constraints:
	//    - required
	LastName *string `json:"lastName" validate:"required"`

	// Password
	// Password
	// Constraints:
	//    - required
	Password *string `json:"password" validate:"required"`

	// Phone
	// Phone
	// Constraints:
	//    - nullable
	Phone *string `json:"phone,omitempty"`

	// Remark
	// Remark
	// Constraints:
	//    - nullable
	Remark *string `json:"remark,omitempty"`

	// State
	// State
	// Constraints:
	//    - nullable
	State *string `json:"state,omitempty"`

	// SubscriberPackage
	// Constraints:
	//    - nullable
	SubscriberPackage *WSGCommonGenericRef `json:"subscriberPackage,omitempty"`

	// UserName
	// User Name
	// Constraints:
	//    - required
	UserName *string `json:"userName" validate:"required"`

	// ZipCode
	// Zip Code
	// Constraints:
	//    - nullable
	ZipCode *string `json:"zipCode,omitempty"`
}

func NewWSGIdentityCreateUser() *WSGIdentityCreateUser {
	m := new(WSGIdentityCreateUser)
	return m
}

type WSGIdentityDeleteBulk struct {
	// IdList
	// Constraints:
	//    - nullable
	IdList WSGCommonIdList `json:"idList,omitempty"`
}

func NewWSGIdentityDeleteBulk() *WSGIdentityDeleteBulk {
	m := new(WSGIdentityDeleteBulk)
	return m
}

type WSGIdentityGuestPassConfiguration struct {
	// AutoGeneratedPassword
	// Pass generation
	// Constraints:
	//    - nullable
	AutoGeneratedPassword *bool `json:"autoGeneratedPassword,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationDate
	// Expiration date and time
	// Constraints:
	//    - nullable
	ExpirationDate *string `json:"expirationDate,omitempty"`

	// GeneratedOn
	// Generated date and time
	// Constraints:
	//    - nullable
	GeneratedOn *string `json:"generatedOn,omitempty"`

	// GuestName
	// Constraints:
	//    - nullable
	GuestName *WSGCommonNormalName `json:"guestName,omitempty"`

	// Id
	// ID of the identity guest pass
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// Key
	// Identifier of the identity guest pass
	// Constraints:
	//    - nullable
	Key *string `json:"key,omitempty"`

	// MaxDevices
	// Constraints:
	//    - nullable
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices,omitempty"`

	// PassEffectSince
	// Pass effective since
	// Constraints:
	//    - nullable
	//    - oneof:[CREATION_TIME,FIRST_USE]
	PassEffectSince *string `json:"passEffectSince,omitempty" validate:"omitempty,oneof=CREATION_TIME FIRST_USE"`

	// PassUseDays
	// Expire new guest pass if not used within
	// Constraints:
	//    - nullable
	PassUseDays *int `json:"passUseDays,omitempty"`

	// PassValidFor
	// Constraints:
	//    - nullable
	PassValidFor *WSGIdentityPassValidFor `json:"passValidFor,omitempty"`

	// Remarks
	// Remarks
	// Constraints:
	//    - nullable
	Remarks *string `json:"remarks,omitempty"`

	// SessionDuration
	// Constraints:
	//    - nullable
	SessionDuration *WSGIdentitySessionDuration `json:"sessionDuration,omitempty"`

	// Ssid
	// SSID
	// Constraints:
	//    - nullable
	Ssid *string `json:"ssid,omitempty"`

	// UserId
	// user ID of the identity guest pass
	// Constraints:
	//    - nullable
	UserId *string `json:"userId,omitempty"`

	// Wlan
	// Constraints:
	//    - nullable
	Wlan *WSGCommonGenericRef `json:"wlan,omitempty"`

	// WlanRestrition
	// Wlan description
	// Constraints:
	//    - nullable
	WlanRestrition *string `json:"wlanRestrition,omitempty"`

	// Zone
	// Constraints:
	//    - nullable
	Zone *WSGCommonGenericRef `json:"zone,omitempty"`
}

func NewWSGIdentityGuestPassConfiguration() *WSGIdentityGuestPassConfiguration {
	m := new(WSGIdentityGuestPassConfiguration)
	return m
}

type WSGIdentityGuestPassList struct {
	// Extra
	// Constraints:
	//    - nullable
	Extra *WSGCommonRbacMetadata `json:"extra,omitempty"`

	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityGuestPassConfiguration `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityGuestPassList() *WSGIdentityGuestPassList {
	m := new(WSGIdentityGuestPassList)
	return m
}

type WSGIdentityList struct {
	// Extra
	// Constraints:
	//    - nullable
	Extra *WSGCommonRbacMetadata `json:"extra,omitempty"`

	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityListType `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityList() *WSGIdentityList {
	m := new(WSGIdentityList)
	return m
}

type WSGIdentityListType struct {
	// CreateDateTime
	// Timestamp of being created
	// Constraints:
	//    - nullable
	CreateDateTime *int `json:"createDateTime,omitempty"`

	// CreatorId
	// Creator ID
	// Constraints:
	//    - nullable
	CreatorId *string `json:"creatorId,omitempty"`

	// CreatorUsername
	// Creator Name
	// Constraints:
	//    - nullable
	CreatorUsername *string `json:"creatorUsername,omitempty"`

	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// FirewallProfileId
	// Constraints:
	//    - nullable
	FirewallProfileId *string `json:"firewallProfileId,omitempty"`

	// Id
	// Identifier of the service
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// MaxDevices
	// Constraints:
	//    - nullable
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices,omitempty"`

	// ModifiedDateTime
	// Timestamp of being modified
	// Constraints:
	//    - nullable
	ModifiedDateTime *int `json:"modifiedDateTime,omitempty"`

	// ModifierId
	// Modifier ID
	// Constraints:
	//    - nullable
	ModifierId *string `json:"modifierId,omitempty"`

	// ModifierUsername
	// Modifier Name
	// Constraints:
	//    - nullable
	ModifierUsername *string `json:"modifierUsername,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName `json:"name,omitempty"`

	// UserTrafficProfile
	// Constraints:
	//    - nullable
	UserTrafficProfile *WSGCommonGenericRef `json:"userTrafficProfile,omitempty"`

	// VlanId
	// vlan id
	// Constraints:
	//    - nullable
	VlanId *int `json:"vlanId,omitempty"`

	// VlanPooling
	// Constraints:
	//    - nullable
	VlanPooling *WSGCommonGenericRef `json:"vlanPooling,omitempty"`
}

func NewWSGIdentityListType() *WSGIdentityListType {
	m := new(WSGIdentityListType)
	return m
}

type WSGIdentityUserRole struct {
	// CreateDateTime
	// Timestamp of being created
	// Constraints:
	//    - nullable
	CreateDateTime *int `json:"createDateTime,omitempty"`

	// CreatorId
	// Creator ID
	// Constraints:
	//    - nullable
	CreatorId *string `json:"creatorId,omitempty"`

	// CreatorUsername
	// Creator Name
	// Constraints:
	//    - nullable
	CreatorUsername *string `json:"creatorUsername,omitempty"`

	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// FirewallProfileId
	// Constraints:
	//    - nullable
	FirewallProfileId *string `json:"firewallProfileId,omitempty"`

	// Id
	// the identifier of the object
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// MaxDevices
	// Constraints:
	//    - nullable
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices,omitempty"`

	// ModifiedDateTime
	// Timestamp of being modified
	// Constraints:
	//    - nullable
	ModifiedDateTime *int `json:"modifiedDateTime,omitempty"`

	// ModifierId
	// Modifier ID
	// Constraints:
	//    - nullable
	ModifierId *string `json:"modifierId,omitempty"`

	// ModifierUsername
	// Modifier Name
	// Constraints:
	//    - nullable
	ModifierUsername *string `json:"modifierUsername,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName2to64 `json:"name,omitempty"`

	// UserTrafficProfile
	// Constraints:
	//    - nullable
	UserTrafficProfile *WSGCommonGenericRef `json:"userTrafficProfile,omitempty"`

	// VlanId
	// vlan id
	// Constraints:
	//    - nullable
	VlanId *int `json:"vlanId,omitempty"`

	// VlanPooling
	// Constraints:
	//    - nullable
	VlanPooling *WSGCommonGenericRef `json:"vlanPooling,omitempty"`
}

func NewWSGIdentityUserRole() *WSGIdentityUserRole {
	m := new(WSGIdentityUserRole)
	return m
}

type WSGIdentityUserSummary struct {
	// CreatedOn
	// Created on
	// Constraints:
	//    - nullable
	CreatedOn *string `json:"createdOn,omitempty"`

	// DisplayName
	// Constraints:
	//    - nullable
	DisplayName *WSGCommonNormalName `json:"displayName,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// Id
	// Identifier of the identity user
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// IsDisabled
	// Is disalbed
	// Constraints:
	//    - nullable
	IsDisabled *string `json:"isDisabled,omitempty"`

	// UserName
	// User Name
	// Constraints:
	//    - nullable
	UserName *string `json:"userName,omitempty"`

	// UserSource
	// User Source
	// Constraints:
	//    - nullable
	UserSource *string `json:"userSource,omitempty"`

	// UserType
	// User Type
	// Constraints:
	//    - nullable
	UserType *string `json:"userType,omitempty"`
}

func NewWSGIdentityUserSummary() *WSGIdentityUserSummary {
	m := new(WSGIdentityUserSummary)
	return m
}

type WSGIdentityImportIdentityGuestPass struct {
	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// MaxDevices
	// Constraints:
	//    - required
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices" validate:"required"`

	// PassEffectSince
	// Pass effective since
	// Constraints:
	//    - nullable
	//    - oneof:[CREATION_TIME,FIRST_USE]
	PassEffectSince *string `json:"passEffectSince,omitempty" validate:"omitempty,oneof=CREATION_TIME FIRST_USE"`

	// PassUseDays
	// Expire new guest pass if not used within
	// Constraints:
	//    - nullable
	PassUseDays *int `json:"passUseDays,omitempty"`

	// PassValidFor
	// Constraints:
	//    - required
	PassValidFor *WSGIdentityPassValidFor `json:"passValidFor" validate:"required"`

	// SessionDuration
	// Constraints:
	//    - nullable
	SessionDuration *WSGIdentitySessionDuration `json:"sessionDuration,omitempty"`

	// Wlan
	// Constraints:
	//    - required
	Wlan *WSGCommonGenericRef `json:"wlan" validate:"required"`

	// Zone
	// Constraints:
	//    - required
	Zone *WSGCommonGenericRef `json:"zone" validate:"required"`
}

func NewWSGIdentityImportIdentityGuestPass() *WSGIdentityImportIdentityGuestPass {
	m := new(WSGIdentityImportIdentityGuestPass)
	return m
}

type WSGIdentityMaxDevices struct {
	// MaxDevicesAllowed
	// Max devices allowed
	// Constraints:
	//    - nullable
	//    - default:'LIMITED'
	//    - oneof:[UNLIMITED,LIMITED]
	MaxDevicesAllowed *string `json:"maxDevicesAllowed,omitempty" validate:"omitempty,oneof=UNLIMITED LIMITED"`

	// MaxDevicesNumber
	// max devices number
	// Constraints:
	//    - nullable
	//    - default:3
	//    - min:1
	//    - max:10
	MaxDevicesNumber *int `json:"maxDevicesNumber,omitempty" validate:"omitempty,gte=1,lte=10"`
}

func NewWSGIdentityMaxDevices() *WSGIdentityMaxDevices {
	m := new(WSGIdentityMaxDevices)
	return m
}

type WSGIdentityModifyIdentityUserRole struct {
	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// FirewallProfileId
	// Constraints:
	//    - nullable
	FirewallProfileId *string `json:"firewallProfileId,omitempty"`

	// Id
	// ID
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// MaxDevices
	// Constraints:
	//    - nullable
	MaxDevices *WSGIdentityMaxDevices `json:"maxDevices,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName2to64 `json:"name,omitempty"`

	// UserTrafficProfile
	// Constraints:
	//    - nullable
	UserTrafficProfile *WSGCommonGenericRef `json:"userTrafficProfile,omitempty"`

	// VlanId
	// vlan id
	// Constraints:
	//    - nullable
	//    - min:1
	//    - max:4096
	VlanId *int `json:"vlanId,omitempty" validate:"omitempty,gte=1,lte=4096"`

	// VlanPooling
	// Constraints:
	//    - nullable
	VlanPooling *WSGCommonGenericRef `json:"vlanPooling,omitempty"`
}

func NewWSGIdentityModifyIdentityUserRole() *WSGIdentityModifyIdentityUserRole {
	m := new(WSGIdentityModifyIdentityUserRole)
	return m
}

type WSGIdentityModifySubscriptionPackage struct {
	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationInterval
	// Expiration interval
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK,MONTH,YEAR,NEVER]
	ExpirationInterval *string `json:"expirationInterval,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK MONTH YEAR NEVER"`

	// ExpirationValue
	// Expiration value
	// Constraints:
	//    - nullable
	ExpirationValue *int `json:"expirationValue,omitempty"`

	// Id
	// ID
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName `json:"name,omitempty"`
}

func NewWSGIdentityModifySubscriptionPackage() *WSGIdentityModifySubscriptionPackage {
	m := new(WSGIdentityModifySubscriptionPackage)
	return m
}

type WSGIdentityModifyUser struct {
	// Address
	// Address
	// Constraints:
	//    - nullable
	Address *string `json:"address,omitempty"`

	// City
	// City
	// Constraints:
	//    - nullable
	City *string `json:"city,omitempty"`

	// CountryName
	// Country
	// Constraints:
	//    - nullable
	CountryName *string `json:"countryName,omitempty"`

	// CountryShortName
	// Country
	// Constraints:
	//    - nullable
	CountryShortName *string `json:"countryShortName,omitempty"`

	// DomainId
	// Domain Id
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// Email
	// Email
	// Constraints:
	//    - nullable
	Email *string `json:"email,omitempty"`

	// FirstName
	// First name
	// Constraints:
	//    - nullable
	FirstName *string `json:"firstName,omitempty"`

	// Id
	// ID
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// IsDisabled
	// Is Disabled
	// Constraints:
	//    - nullable
	//    - oneof:[NO,YES]
	IsDisabled *string `json:"isDisabled,omitempty" validate:"omitempty,oneof=NO YES"`

	// LastName
	// Last Name
	// Constraints:
	//    - nullable
	LastName *string `json:"lastName,omitempty"`

	// Password
	// Password
	// Constraints:
	//    - nullable
	Password *string `json:"password,omitempty"`

	// Phone
	// Phone
	// Constraints:
	//    - nullable
	Phone *string `json:"phone,omitempty"`

	// Remark
	// Remark
	// Constraints:
	//    - nullable
	Remark *string `json:"remark,omitempty"`

	// State
	// State
	// Constraints:
	//    - nullable
	State *string `json:"state,omitempty"`

	// SubscriberPackage
	// Constraints:
	//    - nullable
	SubscriberPackage *WSGCommonGenericRef `json:"subscriberPackage,omitempty"`

	// ZipCode
	// Zip Code
	// Constraints:
	//    - nullable
	ZipCode *string `json:"zipCode,omitempty"`
}

func NewWSGIdentityModifyUser() *WSGIdentityModifyUser {
	m := new(WSGIdentityModifyUser)
	return m
}

type WSGIdentityPackageConfiguration struct {
	// PackageExpiration
	// Package expiration interval and value
	// Constraints:
	//    - nullable
	PackageExpiration *string `json:"packageExpiration,omitempty"`

	// SubscriberPackage
	// Constraints:
	//    - nullable
	SubscriberPackage *WSGCommonGenericRef `json:"subscriberPackage,omitempty"`
}

func NewWSGIdentityPackageConfiguration() *WSGIdentityPackageConfiguration {
	m := new(WSGIdentityPackageConfiguration)
	return m
}

type WSGIdentityPackageList struct {
	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityPackageConfiguration `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityPackageList() *WSGIdentityPackageList {
	m := new(WSGIdentityPackageList)
	return m
}

type WSGIdentityPassValidFor struct {
	// ExpirationUnit
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK]
	ExpirationUnit *string `json:"expirationUnit,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK"`

	// ExpirationValue
	// Constraints:
	//    - nullable
	ExpirationValue *int `json:"expirationValue,omitempty"`
}

func NewWSGIdentityPassValidFor() *WSGIdentityPassValidFor {
	m := new(WSGIdentityPassValidFor)
	return m
}

type WSGIdentityQueryCriteria struct {
	// Attributes
	// Get specific columns only
	// Constraints:
	//    - nullable
	Attributes []string `json:"attributes,omitempty" validate:"omitempty,dive"`

	// Criteria
	// Add backward compatibility for UI framework
	// Constraints:
	//    - nullable
	Criteria *string `json:"criteria,omitempty"`

	// ExpandDomains
	// Whether to expand domains into sub domains/ zones or not
	// Constraints:
	//    - nullable
	ExpandDomains *bool `json:"expandDomains,omitempty"`

	// ExtraFilters
	// "AND" condition for multiple filters
	// Constraints:
	//    - nullable
	ExtraFilters []*WSGCommonQueryCriteriaExtraFiltersType `json:"extraFilters,omitempty" validate:"omitempty,dive"`

	// ExtraNotFilters
	// "NOT" condition for multiple filters
	// Constraints:
	//    - nullable
	ExtraNotFilters []*WSGCommonQueryCriteriaExtraNotFiltersType `json:"extraNotFilters,omitempty" validate:"omitempty,dive"`

	// ExtraTimeRange
	// Constraints:
	//    - nullable
	ExtraTimeRange *WSGCommonTimeRange `json:"extraTimeRange,omitempty"`

	// Filters
	// Filters used to select specific resource scope
	// Constraints:
	//    - nullable
	Filters []*WSGIdentityQueryCriteriaFiltersType `json:"filters,omitempty" validate:"omitempty,dive"`

	// FullTextSearch
	// Constraints:
	//    - nullable
	FullTextSearch *WSGCommonFullTextSearch `json:"fullTextSearch,omitempty"`

	// Limit
	// Size of one page
	// Constraints:
	//    - nullable
	//    - min:1
	Limit *int `json:"limit,omitempty" validate:"omitempty,gte=1"`

	// Options
	// Specified feature required information
	// Constraints:
	//    - nullable
	Options *WSGIdentityQueryCriteriaOptionsType `json:"options,omitempty"`

	// Page
	// Page number to get
	// Constraints:
	//    - nullable
	//    - min:1
	Page *int `json:"page,omitempty" validate:"omitempty,gte=1"`

	// Query
	// Add backward compatibility for UI framework
	// Constraints:
	//    - nullable
	Query *string `json:"query,omitempty"`

	// SortInfo
	// About sorting
	// Constraints:
	//    - nullable
	SortInfo *WSGCommonQueryCriteriaSortInfoType `json:"sortInfo,omitempty"`
}

func NewWSGIdentityQueryCriteria() *WSGIdentityQueryCriteria {
	m := new(WSGIdentityQueryCriteria)
	return m
}

type WSGIdentityQueryCriteriaFiltersType struct {
	// Operator
	// operator
	// Constraints:
	//    - nullable
	//    - oneof:[eq]
	Operator *string `json:"operator,omitempty" validate:"omitempty,oneof=eq"`

	// Type
	// Group type
	// Constraints:
	//    - required
	//    - oneof:[SYSTEM,CONTROLBLADE,DATABLADE,DOMAIN,ZONE,THIRD_PARTY_ZONE,APGROUP,WLANGROUP,INDOORMAP,AP,WLAN,SWITCH_GROUP]
	Type *string `json:"type" validate:"required,oneof=SYSTEM CONTROLBLADE DATABLADE DOMAIN ZONE THIRD_PARTY_ZONE APGROUP WLANGROUP INDOORMAP AP WLAN SWITCH_GROUP"`

	// Value
	// Group ID
	// Constraints:
	//    - required
	Value *string `json:"value" validate:"required"`
}

func NewWSGIdentityQueryCriteriaFiltersType() *WSGIdentityQueryCriteriaFiltersType {
	m := new(WSGIdentityQueryCriteriaFiltersType)
	return m
}

// WSGIdentityQueryCriteriaOptionsType
//
// Specified feature required information
// Constraints:
//    - nullable
type WSGIdentityQueryCriteriaOptionsType struct {
	// GlobalFilterId
	// Specify GlobalFilter ID for query
	// Constraints:
	//    - nullable
	GlobalFilterId *string `json:"globalFilterId,omitempty"`

	// GuestPassdisplayName
	// Display name of guest pass
	// Constraints:
	//    - nullable
	GuestPassdisplayName *string `json:"guestPass_displayName,omitempty"`

	// GuestPassexpiration
	// Expiration time of guest pass
	// Constraints:
	//    - nullable
	GuestPassexpiration *WSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType `json:"guestPass_expiration,omitempty"`

	// GuestPasswlan
	// WLAN which used by quest pass
	// Constraints:
	//    - nullable
	GuestPasswlan *string `json:"guestPass_wlan,omitempty"`

	// IncludeSharedResources
	// Whether to include the resources of parent domain or not
	// Constraints:
	//    - nullable
	IncludeSharedResources *bool `json:"includeSharedResources,omitempty"`

	// INCLUDERBACMETADATA
	// Whether to include RBAC metadata or not
	// Constraints:
	//    - nullable
	INCLUDERBACMETADATA *bool `json:"INCLUDE_RBAC_METADATA,omitempty"`

	// LocalUserauditTime
	// Audit time of local users
	// Constraints:
	//    - nullable
	LocalUserauditTime *WSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType `json:"localUser_auditTime,omitempty"`

	// LocalUserdisplayName
	// Display name of local users
	// Constraints:
	//    - nullable
	LocalUserdisplayName *string `json:"localUser_displayName,omitempty"`

	// LocalUserfirstName
	// First name of local users
	// Constraints:
	//    - nullable
	LocalUserfirstName *string `json:"localUser_firstName,omitempty"`

	// LocalUserlastName
	// Last name of local users
	// Constraints:
	//    - nullable
	LocalUserlastName *string `json:"localUser_lastName,omitempty"`

	// LocalUsermailAddress
	// Mail address of local users
	// Constraints:
	//    - nullable
	LocalUsermailAddress *string `json:"localUser_mailAddress,omitempty"`

	// LocalUserprimaryPhoneNumber
	// Primary phone number of local users
	// Constraints:
	//    - nullable
	LocalUserprimaryPhoneNumber *string `json:"localUser_primaryPhoneNumber,omitempty"`

	// LocalUserstatus
	// Status of local users
	// Constraints:
	//    - nullable
	LocalUserstatus *string `json:"localUser_status,omitempty"`

	// LocalUsersubscriberType
	// Subscriber type of local users
	// Constraints:
	//    - nullable
	LocalUsersubscriberType *string `json:"localUser_subscriberType,omitempty"`

	// LocalUseruserName
	// User name of local users
	// Constraints:
	//    - nullable
	LocalUseruserName *string `json:"localUser_userName,omitempty"`

	// LocalUseruserSource
	// User source of local users
	// Constraints:
	//    - nullable
	LocalUseruserSource *string `json:"localUser_userSource,omitempty"`

	// TENANTID
	// Specify Tenant ID for query
	// Constraints:
	//    - nullable
	TENANTID *string `json:"TENANT_ID,omitempty"`
}

func NewWSGIdentityQueryCriteriaOptionsType() *WSGIdentityQueryCriteriaOptionsType {
	m := new(WSGIdentityQueryCriteriaOptionsType)
	return m
}

// WSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType
//
// Expiration time of guest pass
// Constraints:
//    - nullable
type WSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType struct {
	// End
	// end time of expiration
	// Constraints:
	//    - nullable
	End *float64 `json:"end,omitempty"`

	// Interval
	// time interval in second
	// Constraints:
	//    - nullable
	Interval *float64 `json:"interval,omitempty"`

	// Start
	// start time of expiration
	// Constraints:
	//    - nullable
	Start *float64 `json:"start,omitempty"`
}

func NewWSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType() *WSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType {
	m := new(WSGIdentityQueryCriteriaOptionsTypeGuestPassexpirationType)
	return m
}

// WSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType
//
// Audit time of local users
// Constraints:
//    - nullable
type WSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType struct {
	// End
	// end time for auditTime
	// Constraints:
	//    - nullable
	End *float64 `json:"end,omitempty"`

	// Interval
	// time interval in second
	// Constraints:
	//    - nullable
	Interval *float64 `json:"interval,omitempty"`

	// Start
	// start time for auditTime
	// Constraints:
	//    - nullable
	Start *float64 `json:"start,omitempty"`
}

func NewWSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType() *WSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType {
	m := new(WSGIdentityQueryCriteriaOptionsTypeLocalUserauditTimeType)
	return m
}

type WSGIdentitySessionDuration struct {
	// RequireLoginAgain
	// Constraints:
	//    - nullable
	RequireLoginAgain *bool `json:"requireLoginAgain,omitempty"`

	// SessionUnit
	// Constraints:
	//    - nullable
	//    - oneof:[MIN,HOUR,DAY,WEEK]
	SessionUnit *string `json:"sessionUnit,omitempty" validate:"omitempty,oneof=MIN HOUR DAY WEEK"`

	// SessionValue
	// Constraints:
	//    - nullable
	SessionValue *int `json:"sessionValue,omitempty"`
}

func NewWSGIdentitySessionDuration() *WSGIdentitySessionDuration {
	m := new(WSGIdentitySessionDuration)
	return m
}

type WSGIdentitySubscriptionPackage struct {
	// CreateDateTime
	// Timestamp of being created
	// Constraints:
	//    - nullable
	CreateDateTime *int `json:"createDateTime,omitempty"`

	// CreatorId
	// Creator ID
	// Constraints:
	//    - nullable
	CreatorId *string `json:"creatorId,omitempty"`

	// CreatorUsername
	// Creator Name
	// Constraints:
	//    - nullable
	CreatorUsername *string `json:"creatorUsername,omitempty"`

	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationInterval
	// Expiration interval
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK,MONTH,YEAR,NEVER]
	ExpirationInterval *string `json:"expirationInterval,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK MONTH YEAR NEVER"`

	// ExpirationValue
	// Expiration value
	// Constraints:
	//    - nullable
	ExpirationValue *int `json:"expirationValue,omitempty"`

	// ModifiedDateTime
	// Timestamp of being modified
	// Constraints:
	//    - nullable
	ModifiedDateTime *int `json:"modifiedDateTime,omitempty"`

	// ModifierId
	// Modifier ID
	// Constraints:
	//    - nullable
	ModifierId *string `json:"modifierId,omitempty"`

	// ModifierUsername
	// Modifier Name
	// Constraints:
	//    - nullable
	ModifierUsername *string `json:"modifierUsername,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName `json:"name,omitempty"`
}

func NewWSGIdentitySubscriptionPackage() *WSGIdentitySubscriptionPackage {
	m := new(WSGIdentitySubscriptionPackage)
	return m
}

type WSGIdentitySubscriptionPackageList struct {
	// Extra
	// Constraints:
	//    - nullable
	Extra *WSGCommonRbacMetadata `json:"extra,omitempty"`

	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentitySubscriptionPackageListType `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentitySubscriptionPackageList() *WSGIdentitySubscriptionPackageList {
	m := new(WSGIdentitySubscriptionPackageList)
	return m
}

type WSGIdentitySubscriptionPackageListType struct {
	// Description
	// Constraints:
	//    - nullable
	Description *WSGCommonDescription `json:"description,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationInterval
	// Expiration interval
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK,MONTH,YEAR,NEVER]
	ExpirationInterval *string `json:"expirationInterval,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK MONTH YEAR NEVER"`

	// ExpirationValue
	// Expiration value
	// Constraints:
	//    - nullable
	ExpirationValue *int `json:"expirationValue,omitempty"`

	// Id
	// the identifier of the subscription package
	// Constraints:
	//    - nullable
	Id *string `json:"id,omitempty"`

	// Name
	// Constraints:
	//    - nullable
	Name *WSGCommonNormalName `json:"name,omitempty"`
}

func NewWSGIdentitySubscriptionPackageListType() *WSGIdentitySubscriptionPackageListType {
	m := new(WSGIdentitySubscriptionPackageListType)
	return m
}

type WSGIdentityUserConfiguration struct {
	// Address
	// Address
	// Constraints:
	//    - nullable
	//    - max:256
	//    - min:2
	Address *string `json:"address,omitempty" validate:"omitempty,max=256,min=2"`

	// City
	// City
	// Constraints:
	//    - nullable
	//    - max:50
	//    - min:2
	City *string `json:"city,omitempty" validate:"omitempty,max=50,min=2"`

	// CountryName
	// Country
	// Constraints:
	//    - nullable
	CountryName *string `json:"countryName,omitempty"`

	// CountryShortName
	// Country
	// Constraints:
	//    - nullable
	CountryShortName *string `json:"countryShortName,omitempty"`

	// CreateDateTime
	// Timestamp of being created
	// Constraints:
	//    - nullable
	CreateDateTime *int `json:"createDateTime,omitempty"`

	// CreatorId
	// Creator ID
	// Constraints:
	//    - nullable
	CreatorId *string `json:"creatorId,omitempty"`

	// CreatorUsername
	// Creator Name
	// Constraints:
	//    - nullable
	CreatorUsername *string `json:"creatorUsername,omitempty"`

	// CredentialsGuestPassDto
	// Constraints:
	//    - nullable
	CredentialsGuestPassDto *WSGIdentityUserConfigurationCredentialsGuestPassDtoType `json:"credentialsGuestPassDto,omitempty"`

	// Email
	// Email
	// Constraints:
	//    - nullable
	Email *string `json:"email,omitempty"`

	// FirstName
	// First name
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	FirstName *string `json:"firstName,omitempty" validate:"omitempty,max=32,min=2"`

	// IsDisabled
	// Is Disabled
	// Constraints:
	//    - nullable
	//    - oneof:[NO,YES]
	IsDisabled *string `json:"isDisabled,omitempty" validate:"omitempty,oneof=NO YES"`

	// LastName
	// Last Name
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	LastName *string `json:"lastName,omitempty" validate:"omitempty,max=32,min=2"`

	// ModifiedDateTime
	// Timestamp of being modified
	// Constraints:
	//    - nullable
	ModifiedDateTime *int `json:"modifiedDateTime,omitempty"`

	// ModifierId
	// Modifier ID
	// Constraints:
	//    - nullable
	ModifierId *string `json:"modifierId,omitempty"`

	// ModifierUsername
	// Modifier Name
	// Constraints:
	//    - nullable
	ModifierUsername *string `json:"modifierUsername,omitempty"`

	// PackageExpirationDate
	// Package Expiration Date
	// Constraints:
	//    - nullable
	PackageExpirationDate *int `json:"packageExpirationDate,omitempty"`

	// PackageExpirationInterval
	// Package Expiration Interval
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK,MONTH,YEAR,NEVER]
	PackageExpirationInterval *string `json:"packageExpirationInterval,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK MONTH YEAR NEVER"`

	// PackageExpirationValue
	// Package Expiration Value
	// Constraints:
	//    - nullable
	PackageExpirationValue *int `json:"packageExpirationValue,omitempty"`

	// PackageStatus
	// Package Status
	// Constraints:
	//    - nullable
	//    - oneof:[DEPLETED,AVAILABLE,EXPIRED,TERMINATED,REMOVED]
	PackageStatus *string `json:"packageStatus,omitempty" validate:"omitempty,oneof=DEPLETED AVAILABLE EXPIRED TERMINATED REMOVED"`

	// Phone
	// Phone
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	Phone *string `json:"phone,omitempty" validate:"omitempty,max=32,min=2"`

	// Remark
	// Remark
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	Remark *string `json:"remark,omitempty" validate:"omitempty,max=32,min=2"`

	// State
	// State
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	State *string `json:"state,omitempty" validate:"omitempty,max=32,min=2"`

	// SubscriberPackage
	// Constraints:
	//    - nullable
	SubscriberPackage *WSGCommonGenericRef `json:"subscriberPackage,omitempty"`

	// UserName
	// User Name
	// Constraints:
	//    - nullable
	//    - max:64
	//    - min:2
	UserName *string `json:"userName,omitempty" validate:"omitempty,max=64,min=2"`

	// UsernamePasswordCredentialsImplDto
	// Constraints:
	//    - nullable
	UsernamePasswordCredentialsImplDto *WSGIdentityUsernamePasswordCredentialsImplDto `json:"usernamePasswordCredentialsImplDto,omitempty"`

	// ZipCode
	// Zip Code
	// Constraints:
	//    - nullable
	//    - max:32
	//    - min:2
	ZipCode *string `json:"zipCode,omitempty" validate:"omitempty,max=32,min=2"`
}

func NewWSGIdentityUserConfiguration() *WSGIdentityUserConfiguration {
	m := new(WSGIdentityUserConfiguration)
	return m
}

type WSGIdentityUserConfigurationCredentialsGuestPassDtoType struct {
	// AuthenticationMethod
	// Authentication method of credential
	// Constraints:
	//    - nullable
	//    - oneof:[GUEST_PASS]
	AuthenticationMethod *string `json:"authenticationMethod,omitempty" validate:"omitempty,oneof=GUEST_PASS"`

	// AutoGeneratePassword
	// Pass generation
	// Constraints:
	//    - nullable
	AutoGeneratePassword *bool `json:"autoGeneratePassword,omitempty"`

	// Comment
	// Constraints:
	//    - nullable
	Comment *string `json:"comment,omitempty"`

	// CreationDate
	// Creation Date
	// Constraints:
	//    - nullable
	CreationDate *int `json:"creationDate,omitempty"`

	// CreatorId
	// Creator ID
	// Constraints:
	//    - nullable
	CreatorId *string `json:"creatorId,omitempty"`

	// DisplayName
	// filter identity user list by display name
	// Constraints:
	//    - nullable
	DisplayName *string `json:"displayName,omitempty"`

	// DomainId
	// identifier of the domain
	// Constraints:
	//    - nullable
	DomainId *string `json:"domainId,omitempty"`

	// ExpirationDate
	// Expiration date and time
	// Constraints:
	//    - nullable
	ExpirationDate *string `json:"expirationDate,omitempty"`

	// ExpirationUnit
	// Constraints:
	//    - nullable
	//    - oneof:[HOUR,DAY,WEEK]
	ExpirationUnit *string `json:"expirationUnit,omitempty" validate:"omitempty,oneof=HOUR DAY WEEK"`

	// ExpirationValue
	// Constraints:
	//    - nullable
	ExpirationValue *int `json:"expirationValue,omitempty"`

	// ExpireAfterIfNotUsed
	// Constraints:
	//    - nullable
	ExpireAfterIfNotUsed *int `json:"expireAfterIfNotUsed,omitempty"`

	// GuestExpiration
	// Expiration time of guest pass
	// Constraints:
	//    - nullable
	GuestExpiration *int `json:"guestExpiration,omitempty"`

	// Key
	// Key of this guest pass
	// Constraints:
	//    - nullable
	Key *string `json:"key,omitempty"`

	// LoginPassword
	// Login Password
	// Constraints:
	//    - nullable
	LoginPassword *string `json:"loginPassword,omitempty"`

	// MacAddressList
	// Constraints:
	//    - nullable
	MacAddressList []string `json:"macAddressList,omitempty" validate:"omitempty,dive"`

	// MaxDevices
	// Maximum number of allowed device
	// Constraints:
	//    - nullable
	MaxDevices *int `json:"maxDevices,omitempty"`

	// ServiceProviderId
	// Service Provider Id
	// Constraints:
	//    - nullable
	ServiceProviderId *string `json:"serviceProviderId,omitempty"`

	// SessionUnit
	// Constraints:
	//    - nullable
	//    - oneof:[MIN,HOUR,DAY,WEEK]
	SessionUnit *string `json:"sessionUnit,omitempty" validate:"omitempty,oneof=MIN HOUR DAY WEEK"`

	// SessionValue
	// Constraints:
	//    - nullable
	SessionValue *int `json:"sessionValue,omitempty"`

	// UserKey
	// user ID of the identity guest pass
	// Constraints:
	//    - nullable
	UserKey *string `json:"userKey,omitempty"`

	// UserName
	// Username of this guest pass
	// Constraints:
	//    - nullable
	UserName *string `json:"userName,omitempty"`

	// Wlan
	// WLAN Id
	// Constraints:
	//    - nullable
	Wlan *string `json:"wlan,omitempty"`

	// WlanName
	// WLAN Name
	// Constraints:
	//    - nullable
	WlanName *string `json:"wlanName,omitempty"`
}

func NewWSGIdentityUserConfigurationCredentialsGuestPassDtoType() *WSGIdentityUserConfigurationCredentialsGuestPassDtoType {
	m := new(WSGIdentityUserConfigurationCredentialsGuestPassDtoType)
	return m
}

type WSGIdentityUserList struct {
	// Extra
	// Constraints:
	//    - nullable
	Extra *WSGCommonRbacMetadata `json:"extra,omitempty"`

	// FirstIndex
	// Constraints:
	//    - nullable
	FirstIndex *int `json:"firstIndex,omitempty"`

	// HasMore
	// Constraints:
	//    - nullable
	HasMore *bool `json:"hasMore,omitempty"`

	// List
	// Constraints:
	//    - nullable
	List []*WSGIdentityUserSummary `json:"list,omitempty" validate:"omitempty,dive"`

	// TotalCount
	// Constraints:
	//    - nullable
	TotalCount *int `json:"totalCount,omitempty"`
}

func NewWSGIdentityUserList() *WSGIdentityUserList {
	m := new(WSGIdentityUserList)
	return m
}

type WSGIdentityUsernamePasswordCredentialsImplDto struct {
	// AuthenticationMethod
	// Authentication Method
	// Constraints:
	//    - nullable
	//    - oneof:[USERNAME_PASSWORD,GUEST_PASS,MAC_WLAN_DPSK,MO,REMOTE,OAUTH2]
	AuthenticationMethod *string `json:"authenticationMethod,omitempty" validate:"omitempty,oneof=USERNAME_PASSWORD GUEST_PASS MAC_WLAN_DPSK MO REMOTE OAUTH2"`

	// AuthenticationServerConfig
	// Constraints:
	//    - nullable
	AuthenticationServerConfig *WSGIdentityAuthenticationServerConfig `json:"authenticationServerConfig,omitempty"`

	// CreationDate
	// Creation Date
	// Constraints:
	//    - nullable
	CreationDate *int `json:"creationDate,omitempty"`

	// ExpirationDate
	// Expiration Date
	// Constraints:
	//    - nullable
	ExpirationDate *int `json:"expirationDate,omitempty"`

	// Key
	// identifier of the UsernamePasswordCredentialsImplDto
	// Constraints:
	//    - nullable
	Key *string `json:"key,omitempty"`

	// LoginName
	// Login Name
	// Constraints:
	//    - nullable
	LoginName *string `json:"loginName,omitempty"`

	// LoginPassword
	// Login Password
	// Constraints:
	//    - nullable
	LoginPassword *string `json:"loginPassword,omitempty"`

	// PasswordCreation
	// Creation Date of Password
	// Constraints:
	//    - nullable
	PasswordCreation *string `json:"passwordCreation,omitempty"`

	// PasswordExpiration
	// Expiration Date of Password
	// Constraints:
	//    - nullable
	PasswordExpiration *string `json:"passwordExpiration,omitempty"`

	// ServiceProviderId
	// Service Provider Id
	// Constraints:
	//    - nullable
	ServiceProviderId *string `json:"serviceProviderId,omitempty"`
}

func NewWSGIdentityUsernamePasswordCredentialsImplDto() *WSGIdentityUsernamePasswordCredentialsImplDto {
	m := new(WSGIdentityUsernamePasswordCredentialsImplDto)
	return m
}
